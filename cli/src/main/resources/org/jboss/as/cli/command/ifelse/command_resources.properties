
# JBoss, Home of Professional Open Source.
# Copyright 2016, Red Hat, Inc., and individual contributors
# as indicated by the @author tags. See the copyright.txt file in the
# distribution for a full listing of individual contributors.
#
# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.

else.description=\
Ends the preceding if block and starts the else block of the if-else control flow.\n\
\n\
Simple example of if-else control flow which changes system property's value \
named test to the opposite boolean value every time it is executed:\n\
\n\
if result.value==true of /system-property=test:read-resource\n\
\    /system-property=test:write-attribute(name=value,value=false)\n\
\else\n\
\    /system-property=test:write-attribute(name=value,value=true)

end-if.description=\
Ends the if block (if 'else' is not specified) or the else block if it's \
specified and triggers the execution of the if-else control flow by:\n\
- first executing the command line from the if statement\n\
- evaluating its response using the specified condition expression\n\
- if the condition is met, execute the if batch, otherwise\n\
- execute the else batch if it was specified.\n\
\n\
Simple example of if-else control flow which changes system property's value \
named test to the opposite boolean value every time it is executed:\n\
\n\
if result.value==true of /system-property=test:read-resource\n\
\    /system-property=test:write-attribute(name=value,value=false)\n\
else\n\
\    /system-property=test:write-attribute(name=value,value=true)\n\

if.description=\
Starts if-else control flow. The if statement includes command_line (which is \
a CLI command or an operation) that is executed at the beginning of the if-else \
control flow. After the response of the command_line is received from the \
controller, it is evaluated using the condition_expression. condition_expression \
consists of a node path, equals sign ('==') and a specific value. If the target \
value designated with the node path equals to the specified value, then the condition \
is met and the if block (which is a batch) is executed. If the condition wasn't \
met then the else block, if present, and which is also a batch, would be executed.\n\
\n\
Simple example of if-else control flow which changes system property's value \
named test to the opposite boolean value every time it is executed:\n\
\n\
if result.value==true of /system-property=test:read-resource\n\
\    /system-property=test:write-attribute(name=value,value=false)\n\
else\n\
\    /system-property=test:write-attribute(name=value,value=true)

if.arguments.description=\
command_line\n\
CLI command or an operation whose response should be evaluated to determine which \
block of the if-else should be executed next.\n \
\n\
condition_expression\n\
An expression that evaluates the response and based on which the next block of the \
if-else control flow to be executed is chosen.

if.arguments.value=condition_expression of command_line